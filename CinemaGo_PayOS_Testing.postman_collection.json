{
  "info": {
    "name": "CinemaGo PayOS Backend Testing",
    "description": "Collection để test PayOS Backend integration trong CinemaGo",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.environment.set('token', responseJson.token);",
                  "        console.log('Token saved:', responseJson.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            },
            "description": "Đăng nhập để lấy JWT token"
          }
        }
      ]
    },
    {
      "name": "Booking Management",
      "item": [
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.booking && responseJson.booking._id) {",
                  "        pm.environment.set('bookingId', responseJson.booking._id);",
                  "        console.log('Booking ID saved:', responseJson.booking._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"showtime_id\": \"65f8a1b2c3d4e5f6a7b8c9d0\",\n  \"seat_ids\": [\"65f8a1b2c3d4e5f6a7b8c9d1\"],\n  \"payment_method\": \"online\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            },
            "description": "Tạo booking mới để test payment"
          }
        },
        {
          "name": "Get Booking Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            },
            "description": "Lấy chi tiết booking"
          }
        },
        {
          "name": "Get My Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/my-bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "my-bookings"]
            },
            "description": "Lấy danh sách booking của user"
          }
        },
        {
          "name": "Get All Bookings (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            },
            "description": "Lấy tất cả booking (Admin only)"
          }
        },
        {
          "name": "Update Booking Status (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"payment_status\": \"success\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}", "status"]
            },
            "description": "Cập nhật trạng thái booking (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Payment Integration",
      "item": [
        {
          "name": "Create Payment Link",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.paymentLinkId) {",
                  "        pm.environment.set('paymentLinkId', responseJson.data.paymentLinkId);",
                  "        console.log('Payment Link ID saved:', responseJson.data.paymentLinkId);",
                  "    }",
                  "    if (responseJson.data && responseJson.data.orderCode) {",
                  "        pm.environment.set('orderCode', responseJson.data.orderCode);",
                  "        console.log('Order Code saved:', responseJson.data.orderCode);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookingId\": \"{{bookingId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create-payment-link",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create-payment-link"]
            },
            "description": "Tạo payment link với PayOS"
          }
        },
        {
          "name": "Check Payment Status by Booking",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/booking/{{bookingId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "booking", "{{bookingId}}", "status"]
            },
            "description": "Kiểm tra trạng thái thanh toán theo booking ID"
          }
        },
        {
          "name": "Check Payment Status by PaymentLinkId",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payments/check/{{paymentLinkId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "check", "{{paymentLinkId}}"]
            },
            "description": "Kiểm tra trạng thái thanh toán trực tiếp từ PayOS"
          }
        }
      ]
    },
    {
      "name": "Webhook Testing",
      "item": [
        {
          "name": "Simulate Webhook - Payment Success",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"00\",\n  \"desc\": \"success\",\n  \"data\": {\n    \"orderCode\": {{orderCode}},\n    \"amount\": 240000,\n    \"description\": \"Thanh toán vé xem phim - Booking #{{bookingId}}\",\n    \"accountNumber\": \"1234567890\",\n    \"reference\": \"PAYOS_REF_{{orderCode}}\",\n    \"transactionDateTime\": \"2024-01-15T10:35:00Z\",\n    \"currency\": \"VND\",\n    \"paymentLinkId\": \"{{paymentLinkId}}\",\n    \"code\": \"00\",\n    \"desc\": \"success\",\n    \"counterAccountBankId\": \"970422\",\n    \"counterAccountBankName\": \"Ngân hàng TMCP Kỹ thương Việt Nam\",\n    \"counterAccountName\": \"NGUYEN VAN A\",\n    \"counterAccountNumber\": \"1234567890\",\n    \"virtualAccountName\": null,\n    \"virtualAccountNumber\": null\n  },\n  \"signature\": \"mock_signature_for_testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "webhook"]
            },
            "description": "Simulate webhook payment success từ PayOS"
          }
        },
        {
          "name": "Simulate Webhook - Payment Failed",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"07\",\n  \"desc\": \"failed\",\n  \"data\": {\n    \"orderCode\": {{orderCode}},\n    \"amount\": 240000,\n    \"description\": \"Thanh toán vé xem phim - Booking #{{bookingId}}\",\n    \"paymentLinkId\": \"{{paymentLinkId}}\",\n    \"code\": \"07\",\n    \"desc\": \"failed\",\n    \"transactionDateTime\": \"2024-01-15T10:35:00Z\"\n  },\n  \"signature\": \"mock_signature_for_testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "webhook"]
            },
            "description": "Simulate webhook payment failed từ PayOS"
          }
        },
        {
          "name": "Simulate Webhook - Payment Cancelled",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"24\",\n  \"desc\": \"cancelled\",\n  \"data\": {\n    \"orderCode\": {{orderCode}},\n    \"amount\": 240000,\n    \"description\": \"Thanh toán vé xem phim - Booking #{{bookingId}}\",\n    \"paymentLinkId\": \"{{paymentLinkId}}\",\n    \"code\": \"24\",\n    \"desc\": \"cancelled\",\n    \"transactionDateTime\": \"2024-01-15T10:35:00Z\"\n  },\n  \"signature\": \"mock_signature_for_testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "webhook"]
            },
            "description": "Simulate webhook payment cancelled từ PayOS"
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Create Payment Link - Invalid Booking ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookingId\": \"invalid_booking_id\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create-payment-link",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create-payment-link"]
            },
            "description": "Test tạo payment link với booking ID không hợp lệ"
          }
        },
        {
          "name": "Create Payment Link - Missing Booking ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create-payment-link",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create-payment-link"]
            },
            "description": "Test tạo payment link thiếu booking ID"
          }
        },
        {
          "name": "Check Payment Status - Invalid Booking ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/booking/invalid_booking_id/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "booking", "invalid_booking_id", "status"]
            },
            "description": "Test kiểm tra payment status với booking ID không hợp lệ"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}
